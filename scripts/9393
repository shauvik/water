{"coscript-json-url":"coscript:http:\/\/coscripter.researchlabs.ibm.com\/coscripter\/api\/script\/9393","koalescence-lite-url":"http:\/\/coscripter.researchlabs.ibm.com\/coscripter\/lite\/script\/9393","coscripter-save-url":"http:\/\/coscripter.researchlabs.ibm.com\/coscripter\/api\/script\/9393","coscript-run-url":"coscriptrun:http:\/\/coscripter.researchlabs.ibm.com\/coscripter\/lite\/script\/9393","modified-at":"2008-04-10T17:33:46Z","creator":{"shortname":"aero10","name":"aero10","email":"aero10"},"coscript-run-json-url":"coscriptrun:http:\/\/coscripter.researchlabs.ibm.com\/coscripter\/api\/script\/9393","body":"* Google Thumbnails\n\n\tCopyright (c) 2007, Rick Fletcher <fletch@pobox.com>\n\n\n\tReleased under the GPL license\n\n\n\thttp:\/\/www.gnu.org\/copyleft\/gpl.html\n\n\n\n\n\n\t--------------------------------------------------------------------\n\n\n\tThis is a Greasemonkey user script.\n\n\n\n\n\n\tTo install, you need Greasemonkey: http:\/\/greasemonkey.mozdev.org\/\n\n\n\tThen restart Firefox and revisit this script.\n\n\n\tUnder Tools, there will be a new menu item to \"Install User Script\".\n\n\n\tAccept the default configuration and install.\n\n\n\n\n\n\tTo uninstall, go to Tools\/Manage User Scripts,\n\n\n\tselect \"Google Thumbnails\", and click Uninstall.\n\n\n\t--------------------------------------------------------------------\n\n\n\n\n\n\tChangelog\n\n\n\t0.3.5 2007\/10\/10\n\n\n\t\tbug: fixed thumbnails for google's (slightly) altered markup\n\n\n\t0.3.4 2005\/12\/29\n\n\n\t\tbug: fixed links such that they always use the google result link (even if it's a passthru script)\n\n\n\t\tbug: hid the ugly black borders on the alexa images\n\n\n\t0.3.3 2005\/11\/24\n\n\n\t\tbug: fixed thumbnails for results inside of google's new inline recommendation blocks\n\n\n\t\t     (e.g.: http:\/\/www.google.com\/search?q=kiesler) (reported by Nathan Freier)\n\n\n\t\tbug: fixed a few minor layout issues\n\n\n\t0.3.2 2005\/10\/28\n\n\n\t\tbug: google changed their source and broke the script again.  it's fixed and should continue to work if they switch back to \n\n\n\t\t     yesterday's version\n\n\n\t0.3.1 2005\/10\/27\n\n\n\t\tbug: fixed to work with new (broken?) google source\n\n\n\t0.3   2005\/10\/02\n\n\n\t\tnew: refactored to use XPath\n\n\n\t0.2.1 2005\/08\/08\n\n\n\t\tbug: fixed thumbnails when using google's search history (http:\/\/www.google.com\/psearch)\n\n\n\t\tnew: added use_amazon_thumbnails config option\n\n\n\t0.2   2005\/08\/03\n\n\n \t\tnew: results that link to an amazon product page now show the product image instead of the screen shot thumbnail\n\n\n\t\tbug: fixed thumbnail placement for non-html (PDF, PPT, etc.) results\n\n\n\t0.1   2005\/07\/18\n\n\n\t\tinitial release\n\n* \/\n\n\n\n\n\/\/ ==UserScript==\n\n\n\/\/ @name          Google Thumbnails\n\n\n\/\/ @version       0.3.5\n\n\n\/\/ @namespace     http:\/\/flet.ch\/things\/greasemonkey\/\n\n\n\/\/ @description   Adds web site thumbnail images to google search results\n\n\n\/\/ @include       http:\/\/www.google.*\/search*\n\n\n\/\/ ==\/UserScript==\n\n\n\n\n\n(function () {\n\n\n\n\n\n\tvar gthumbnails = {\n\n\n\n\n\n\t\tconfig: {\n\n\n\t\t\tuse_amazon_thumbnails: true, \/\/ use amazon product images in place of screen shots for amazon.com results?\n\n\n\t\t\tdebug: true,                \/\/ print debug output to the javascript console\n\n\n\t\t},\n\n\n\n\n\n\t\tresult_link_xpath: \"\/\/*[(name() = 'DIV' and @class='g') or (name() = 'H3' and @class='sem')]\/H2\/A\",\n\n\n\n\n\n\t\tamazon_regex: \/^http:\\\/\\\/(?:www\\.)?amazon\\.(?:com|(?:co.)?[a-z]{2})\\\/exec\\\/obidos\\\/(?:tg\\\/detail\\\/-|ASIN)\\\/(?:[a-z]+\\\/)?([a-zA-Z0-9]+)\\\/?.*$\/i,\n\n\n\t\tresult_link_regex: \/^(?:([^\\\/].*)|\\\/url\\?.*q=([^&]+)&?.*$)\/i,\n\n\n\n\n\n\t\taddCSS: function( css ) {\n\n\n\t\t\tvar head = window.document.getElementsByTagName( \"head\" )[0];\n\n\n\t\t\tvar style = window.document.createElement( \"style\" );\n\n\n\t\t\tstyle.setAttribute( \"type\", \"text\/css\" );\n\n\n\t\t\tstyle.innerHTML = css;\n\n\n\t\t\thead.appendChild( style );\n\n\n\t\t},\n\n\n\n\n\n\t\taddThumbnails: function() {\n\n\n\t\t\tvar results = document.evaluate( this.result_link_xpath, document, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null );\n\n\n\n\n\n\t\t\tthis.config.debug && ( t0 = new Date().getTime() );\n\n\n\t\t\tfor( var result_link = null, i = 0; ( result_link = results.snapshotItem( i ) ); i++ ) {\n\n\n\t\t\t\t\/\/ create the thumbnail <IMG> and surrounding <A> elements\n\n\n\t\t\t\tvar thumbnail = document.createElement( \"span\" );\n\n\n\n\n\n\t\t\t\tvar result_url = result_link.getAttribute( \"href\" );\n\n\n\t\t\t\tvar real_result_url = result_url.replace( this.result_link_regex, \"$1$2\" );\n\n\n\t\t\t\tvar asin = result_url.match( this.amazon_regex ) && result_url.replace( this.amazon_regex, \"$1\" );\n\n\n\n\n\n\t\t\t\tif( this.config.use_amazon_thumbnails && asin ) {\n\n\n\t\t\t\t\tvar is_amazon_link = true;\n\n\n\t\t\t\t\tvar thumb_url = \"http:\/\/images.amazon.com\/images\/P\/\" + asin + \".01._SS78_BO1,255,255,255_BO1,170,170,170_BO61,255,255,255_CR46,61,112,82_.jpg\";\n\n\n\t\t\t\t} else {\n\n\n\t\t\t\t\tvar is_amazon_link = false;\n\n\n\t\t\t\t\tvar thumb_url = \"http:\/\/open.thumbshots.org\/image.pxf?url=\" + real_result_url;\n\n\n\t\t\t\t}\n\n\n\n\n\n\t\t\t\tthumbnail.innerHTML = \n\n\n\t\t\t\t\t'<a href=\"' + result_url + '\">' +\n\n\n\t\t\t\t\t\t'<img src=\"' + thumb_url + '\" align=\"left\"  height=\"80\" width=\"110\" class=\"gms_gthumbnail' + ( is_amazon_link ? \"_amazon\" : \"\" )  + '\" style=\"background: url(http:\/\/pthumbnails.alexa.com\/image_server.cgi?size=small&url=' + real_result_url + ') no-repeat center;\"\/>' +\n\n\n\t\t\t\t\t'<\/a>';\n\n\n\n\n\n\t\t\t\tresult_link.parentNode.insertBefore( thumbnail, result_link );\n\n\n\t\t\t}\n\n\n\t\t\tthis.config.debug && ( t1 = new Date().getTime() );\n\n\n\t\t\tthis.config.debug && ( GM_log( ( t1 - t0 ) \/ 1000 ) );\n\n\n\t\t}\n\n\n\t}\n\n\n\n\n\n\tgthumbnails.addCSS( \".g, hr, p { clear: left; }\" );\n\n\n\tgthumbnails.addCSS( \".gms_gthumbnail { border: 1px solid #AAA; }\" );\n\n\n\tgthumbnails.addCSS( \".gms_gthumbnail, .gms_gthumbnail_amazon { margin: 0 6px 8px 0; width: 106px; height: 78px;  }\" );\n\n\n\tgthumbnails.addCSS( \".gms_gthumbnail_amazon { border-width: 0; }\" );\n\n\n\n\n\n\tgthumbnails.addThumbnails();\n\n\n\n\n\n})();Google Thumbnails\n\n\n\tCopyright (c) 2007, Rick Fletcher <fletch@pobox.com>\n\n\n\tReleased under the GPL license\n\n\n\thttp:\/\/www.gnu.org\/copyleft\/gpl.html\n\n\n\n\n\n\t--------------------------------------------------------------------\n\n\n\tThis is a Greasemonkey user script.\n\n\n\n\n\n\tTo install, you need Greasemonkey: http:\/\/greasemonkey.mozdev.org\/\n\n\n\tThen restart Firefox and revisit this script.\n\n\n\tUnder Tools, there will be a new menu item to \"Install User Script\".\n\n\n\tAccept the default configuration and install.\n\n\n\n\n\n\tTo uninstall, go to Tools\/Manage User Scripts,\n\n\n\tselect \"Google Thumbnails\", and click Uninstall.\n\n\n\t--------------------------------------------------------------------\n\n\n\n\n\n\tChangelog\n\n\n\t0.3.5 2007\/10\/10\n\n\n\t\tbug: fixed thumbnails for google's (slightly) altered markup\n\n\n\t0.3.4 2005\/12\/29\n\n\n\t\tbug: fixed links such that they always use the google result link (even if it's a passthru script)\n\n\n\t\tbug: hid the ugly black borders on the alexa images\n\n\n\t0.3.3 2005\/11\/24\n\n\n\t\tbug: fixed thumbnails for results inside of google's new inline recommendation blocks\n\n\n\t\t     (e.g.: http:\/\/www.google.com\/search?q=kiesler) (reported by Nathan Freier)\n\n\n\t\tbug: fixed a few minor layout issues\n\n\n\t0.3.2 2005\/10\/28\n\n\n\t\tbug: google changed their source and broke the script again.  it's fixed and should continue to work if they switch back to \n\n\n\t\t     yesterday's version\n\n\n\t0.3.1 2005\/10\/27\n\n\n\t\tbug: fixed to work with new (broken?) google source\n\n\n\t0.3   2005\/10\/02\n\n\n\t\tnew: refactored to use XPath\n\n\n\t0.2.1 2005\/08\/08\n\n\n\t\tbug: fixed thumbnails when using google's search history (http:\/\/www.google.com\/psearch)\n\n\n\t\tnew: added use_amazon_thumbnails config option\n\n\n\t0.2   2005\/08\/03\n\n\n \t\tnew: results that link to an amazon product page now show the product image instead of the screen shot thumbnail\n\n\n\t\tbug: fixed thumbnail placement for non-html (PDF, PPT, etc.) results\n\n\n\t0.1   2005\/07\/18\n\n\n\t\tinitial release\n\n* \/\n\n\n\n\n\/\/ ==UserScript==\n\n\n\/\/ @name          Google Thumbnails\n\n\n\/\/ @version       0.3.5\n\n\n\/\/ @namespace     http:\/\/flet.ch\/things\/greasemonkey\/\n\n\n\/\/ @description   Adds web site thumbnail images to google search results\n\n\n\/\/ @include       http:\/\/www.google.*\/search*\n\n\n\/\/ ==\/UserScript==\n\n\n\n\n\n(function () {\n\n\n\n\n\n\tvar gthumbnails = {\n\n\n\n\n\n\t\tconfig: {\n\n\n\t\t\tuse_amazon_thumbnails: true, \/\/ use amazon product images in place of screen shots for amazon.com results?\n\n\n\t\t\tdebug: true,                \/\/ print debug output to the javascript console\n\n\n\t\t},\n\n\n\n\n\n\t\tresult_link_xpath: \"\/\/*[(name() = 'DIV' and @class='g') or (name() = 'H3' and @class='sem')]\/H2\/A\",\n\n\n\n\n\n\t\tamazon_regex: \/^http:\\\/\\\/(?:www\\.)?amazon\\.(?:com|(?:co.)?[a-z]{2})\\\/exec\\\/obidos\\\/(?:tg\\\/detail\\\/-|ASIN)\\\/(?:[a-z]+\\\/)?([a-zA-Z0-9]+)\\\/?.*$\/i,\n\n\n\t\tresult_link_regex: \/^(?:([^\\\/].*)|\\\/url\\?.*q=([^&]+)&?.*$)\/i,\n\n\n\n\n\n\t\taddCSS: function( css ) {\n\n\n\t\t\tvar head = window.document.getElementsByTagName( \"head\" )[0];\n\n\n\t\t\tvar style = window.document.createElement( \"style\" );\n\n\n\t\t\tstyle.setAttribute( \"type\", \"text\/css\" );\n\n\n\t\t\tstyle.innerHTML = css;\n\n\n\t\t\thead.appendChild( style );\n\n\n\t\t},\n\n\n\n\n\n\t\taddThumbnails: function() {\n\n\n\t\t\tvar results = document.evaluate( this.result_link_xpath, document, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null );\n\n\n\n\n\n\t\t\tthis.config.debug && ( t0 = new Date().getTime() );\n\n\n\t\t\tfor( var result_link = null, i = 0; ( result_link = results.snapshotItem( i ) ); i++ ) {\n\n\n\t\t\t\t\/\/ create the thumbnail <IMG> and surrounding <A> elements\n\n\n\t\t\t\tvar thumbnail = document.createElement( \"span\" );\n\n\n\n\n\n\t\t\t\tvar result_url = result_link.getAttribute( \"href\" );\n\n\n\t\t\t\tvar real_result_url = result_url.replace( this.result_link_regex, \"$1$2\" );\n\n\n\t\t\t\tvar asin = result_url.match( this.amazon_regex ) && result_url.replace( this.amazon_regex, \"$1\" );\n\n\n\n\n\n\t\t\t\tif( this.config.use_amazon_thumbnails && asin ) {\n\n\n\t\t\t\t\tvar is_amazon_link = true;\n\n\n\t\t\t\t\tvar thumb_url = \"http:\/\/images.amazon.com\/images\/P\/\" + asin + \".01._SS78_BO1,255,255,255_BO1,170,170,170_BO61,255,255,255_CR46,61,112,82_.jpg\";\n\n\n\t\t\t\t} else {\n\n\n\t\t\t\t\tvar is_amazon_link = false;\n\n\n\t\t\t\t\tvar thumb_url = \"http:\/\/open.thumbshots.org\/image.pxf?url=\" + real_result_url;\n\n\n\t\t\t\t}\n\n\n\n\n\n\t\t\t\tthumbnail.innerHTML = \n\n\n\t\t\t\t\t'<a href=\"' + result_url + '\">' +\n\n\n\t\t\t\t\t\t'<img src=\"' + thumb_url + '\" align=\"left\"  height=\"80\" width=\"110\" class=\"gms_gthumbnail' + ( is_amazon_link ? \"_amazon\" : \"\" )  + '\" style=\"background: url(http:\/\/pthumbnails.alexa.com\/image_server.cgi?size=small&url=' + real_result_url + ') no-repeat center;\"\/>' +\n\n\n\t\t\t\t\t'<\/a>';\n\n\n\n\n\n\t\t\t\tresult_link.parentNode.insertBefore( thumbnail, result_link );\n\n\n\t\t\t}\n\n\n\t\t\tthis.config.debug && ( t1 = new Date().getTime() );\n\n\n\t\t\tthis.config.debug && ( GM_log( ( t1 - t0 ) \/ 1000 ) );\n\n\n\t\t}\n\n\n\t}\n\n\n\n\n\n\tgthumbnails.addCSS( \".g, hr, p { clear: left; }\" );\n\n\n\tgthumbnails.addCSS( \".gms_gthumbnail { border: 1px solid #AAA; }\" );\n\n\n\tgthumbnails.addCSS( \".gms_gthumbnail, .gms_gthumbnail_amazon { margin: 0 6px 8px 0; width: 106px; height: 78px;  }\" );\n\n\n\tgthumbnails.addCSS( \".gms_gthumbnail_amazon { border-width: 0; }\" );\n\n\n\n\n\n\tgthumbnails.addThumbnails();\n\n\n\n\n\n})();\n","title":"111","json-url":"http:\/\/coscripter.researchlabs.ibm.com\/coscripter\/api\/script\/9393","coscript-url":"coscript:http:\/\/coscripter.researchlabs.ibm.com\/coscripter\/lite\/script\/9393","private":false,"body-html":"<!-- (C) Copyright IBM Corp. 2010 -->\n<ul>\n\t<li>Google Thumbnails<\/li>\n<\/ul>\n<p>Copyright &#169; 2007, Rick Fletcher &lt;fletch@pobox.com&gt;<\/p>\n<p>Released under the <span class=\"caps\">GPL<\/span> license<\/p>\n<p>http:\/\/www.gnu.org\/copyleft\/gpl.html<\/p>\n<p><del>-<\/del>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/p>\n<p>This is a Greasemonkey user script.<\/p>\n<p>To install, you need Greasemonkey: http:\/\/greasemonkey.mozdev.org\/<\/p>\n<p>Then restart Firefox and revisit this script.<\/p>\n<p>Under Tools, there will be a new menu item to &#8220;Install User Script&#8221;.<\/p>\n<p>Accept the default configuration and install.<\/p>\n<p>To uninstall, go to Tools\/Manage User Scripts,<\/p>\n<p>select &#8220;Google Thumbnails&#8221;, and click Uninstall.<\/p>\n<p><del>-<\/del>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/p>\n<p>Changelog<\/p>\n<p>0.3.5 2007\/10\/10<\/p>\n<p>bug: fixed thumbnails for google&#8217;s (slightly) altered markup<\/p>\n<p>0.3.4 2005\/12\/29<\/p>\n<p>bug: fixed links such that they always use the google result link (even if it&#8217;s a passthru script)<\/p>\n<p>bug: hid the ugly black borders on the alexa images<\/p>\n<p>0.3.3 2005\/11\/24<\/p>\n<p>bug: fixed thumbnails for results inside of google&#8217;s new inline recommendation blocks<\/p>\n<p>(e.g.: http:\/\/www.google.com\/search?q=kiesler) (reported by Nathan Freier)<\/p>\n<p>bug: fixed a few minor layout issues<\/p>\n<p>0.3.2 2005\/10\/28<\/p>\n<p>bug: google changed their source and broke the script again.  it&#8217;s fixed and should continue to work if they switch back to<\/p>\n<p>yesterday&#8217;s version<\/p>\n<p>0.3.1 2005\/10\/27<\/p>\n<p>bug: fixed to work with new (broken?) google source<\/p>\n<p>0.3   2005\/10\/02<\/p>\n<p>new: refactored to use XPath<\/p>\n<p>0.2.1 2005\/08\/08<\/p>\n<p>bug: fixed thumbnails when using google&#8217;s search history (http:\/\/www.google.com\/psearch)<\/p>\n<p>new: added use_amazon_thumbnails config option<\/p>\n<p>0.2   2005\/08\/03<\/p>\nnew: results that link to an amazon product page now show the product image instead of the screen shot thumbnail\n<p>bug: fixed thumbnail placement for non-html (<span class=\"caps\">PDF<\/span>, <span class=\"caps\">PPT<\/span>, etc.) results<\/p>\n<p>0.1   2005\/07\/18<\/p>\n<p>initial release<\/p>\n<ul>\n\t<li>\/<\/li>\n<\/ul>\n<p>\/\/ UserScript<\/p>\n<p>\/\/ @name          Google Thumbnails<\/p>\n<p>\/\/ @version       0.3.5<\/p>\n<p>\/\/ @namespace     http:\/\/flet.ch\/things\/greasemonkey\/<\/p>\n<p>\/\/ @description   Adds web site thumbnail images to google search results<\/p>\n<p>\/\/ @include       http:\/\/www.google.<strong>\/search<\/strong><\/p>\n<p>\/\/ \/UserScript<\/p>\n<p>(function () {<\/p>\n<p>var gthumbnails = {<\/p>\n<p>config: {<\/p>\n<p>use_amazon_thumbnails: true, \/\/ use amazon product images in place of screen shots for amazon.com results?<\/p>\n<p>debug: true,                \/\/ print debug output to the javascript console<\/p>\n<p>},<\/p>\n<p>result_link_xpath: &#8220;\/\/*[(name() = &#8216;<span class=\"caps\">DIV<\/span>&#8217; and @class=&#8216;g&#8217;) or (name() = &#8216;H3&#8217; and @class=&#8216;sem&#8217;)]\/H2\/A&#8221;,<\/p>\n<p>amazon_regex: \/^http:\\\/\\\/(?:www\\.)?amazon\\.(?:com|(?:co.)?[a-z]{2})\\\/exec\\\/obidos\\\/(?:tg\\\/detail\\\/-|<span class=\"caps\">ASIN<\/span>)\\\/(?:[a-z]<ins>\\\/)?([a-zA-Z0-9]<\/ins>)\\\/?.*$\/i,<\/p>\n<p>result_link_regex: \/^(?:([^\\\/].<strong>)|\\\/url\\?.<\/strong>q=([^&amp;]+)&amp;?.*$)\/i,<\/p>\n<p>addCSS: function( css ) {<\/p>\n<p>var head = window.document.getElementsByTagName( &#8220;head&#8221; )<sup class=\"footnote\"><a href=\"#fn0\">0<\/a><\/sup>;<\/p>\n<p>var style = window.document.createElement( &#8220;style&#8221; );<\/p>\n<p>style.setAttribute( &#8220;type&#8221;, &#8220;text\/css&#8221; );<\/p>\n<p>style.innerHTML = css;<\/p>\n<p>head.appendChild( style );<\/p>\n<p>},<\/p>\n<p>addThumbnails: function() {<\/p>\n<p>var results = document.evaluate( this.result_link_xpath, document, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null );<\/p>\n<p>this.config.debug &amp;&amp; ( t0 = new Date().getTime() );<\/p>\n<p>for( var result_link = null, i = 0; ( result_link = results.snapshotItem( i ) ); i++ ) {<\/p>\n<p>\/\/ create the thumbnail <IMG> and surrounding <A> elements<\/p>\n<p>var thumbnail = document.createElement( &#8220;span&#8221; );<\/p>\n<p>var result_url = result_link.getAttribute( &#8220;href&#8221; );<\/p>\n<p>var real_result_url = result_url.replace( this.result_link_regex, &#8220;$1$2&#8221; );<\/p>\n<p>var asin = result_url.match( this.amazon_regex ) &amp;&amp; result_url.replace( this.amazon_regex, &#8220;$1&#8221; );<\/p>\n<p>if( this.config.use_amazon_thumbnails &amp;&amp; asin ) {<\/p>\n<p>var is_amazon_link = true;<\/p>\n<p>var thumb_url = &#8220;http:\/\/images.amazon.com\/images\/P\/&#8221; + asin + &#8220;.01.<em>SS78_BO1,255,255,255_BO1,170,170,170_BO61,255,255,255_CR46,61,112,82<\/em>.jpg&#8221;;<\/p>\n<p>} else {<\/p>\n<p>var is_amazon_link = false;<\/p>\n<p>var thumb_url = &#8220;http:\/\/open.thumbshots.org\/image.pxf?url=&#8221; + real_result_url;<\/p>\n<p>}<\/p>\n<p>thumbnail.innerHTML =<\/p>\n<p>&#8216;&#8217; + result_url + &#8216;&#8220;&gt;&#8217; +<\/p>\n<p>&#8216;&#8217; + thumb_url + &#8216;&quot; align=&#8220;left&#8221;  height=&#8220;80&#8221; width=&#8220;110&#8221; class=&quot;gms_gthumbnail&#8217; + ( is_amazon_link ? &#8220;_amazon&#8221; : &quot;&quot; )  + &#8216;&quot; style=&quot;background: url(http:\/\/pthumbnails.alexa.com\/image_server.cgi?size=small&amp;url=&#8217; + real_result_url + &#8216;) no-repeat center;&quot;\/&gt;&#8217; +<\/p>\n<p>&#8216;<\/a>&#8217;;<\/p>\n<p>result_link.parentNode.insertBefore( thumbnail, result_link );<\/p>\n<p>}<\/p>\n<p>this.config.debug &amp;&amp; ( t1 = new Date().getTime() );<\/p>\n<p>this.config.debug &amp;&amp; ( GM_log( ( t1 &#8211; t0 ) \/ 1000 ) );<\/p>\n<p>}<\/p>\n<p>}<\/p>\n<p>gthumbnails.addCSS( &#8220;.g, hr, p { clear: left; }&#8221; );<\/p>\n<p>gthumbnails.addCSS( &#8220;.gms_gthumbnail { border: 1px solid #<span class=\"caps\">AAA<\/span>; }&#8221; );<\/p>\n<p>gthumbnails.addCSS( &#8220;.gms_gthumbnail, .gms_gthumbnail_amazon { margin: 0 6px 8px 0; width: 106px; height: 78px;  }&#8221; );<\/p>\n<p>gthumbnails.addCSS( &#8220;.gms_gthumbnail_amazon { border-width: 0; }&#8221; );<\/p>\n<p>gthumbnails.addThumbnails();<\/p>\n<p>})();Google Thumbnails<\/p>\n<p>Copyright &#169; 2007, Rick Fletcher &lt;fletch@pobox.com&gt;<\/p>\n<p>Released under the <span class=\"caps\">GPL<\/span> license<\/p>\n<p>http:\/\/www.gnu.org\/copyleft\/gpl.html<\/p>\n<p><del>-<\/del>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/p>\n<p>This is a Greasemonkey user script.<\/p>\n<p>To install, you need Greasemonkey: http:\/\/greasemonkey.mozdev.org\/<\/p>\n<p>Then restart Firefox and revisit this script.<\/p>\n<p>Under Tools, there will be a new menu item to &#8220;Install User Script&#8221;.<\/p>\n<p>Accept the default configuration and install.<\/p>\n<p>To uninstall, go to Tools\/Manage User Scripts,<\/p>\n<p>select &#8220;Google Thumbnails&#8221;, and click Uninstall.<\/p>\n<p><del>-<\/del>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<\/p>\n<p>Changelog<\/p>\n<p>0.3.5 2007\/10\/10<\/p>\n<p>bug: fixed thumbnails for google&#8217;s (slightly) altered markup<\/p>\n<p>0.3.4 2005\/12\/29<\/p>\n<p>bug: fixed links such that they always use the google result link (even if it&#8217;s a passthru script)<\/p>\n<p>bug: hid the ugly black borders on the alexa images<\/p>\n<p>0.3.3 2005\/11\/24<\/p>\n<p>bug: fixed thumbnails for results inside of google&#8217;s new inline recommendation blocks<\/p>\n<p>(e.g.: http:\/\/www.google.com\/search?q=kiesler) (reported by Nathan Freier)<\/p>\n<p>bug: fixed a few minor layout issues<\/p>\n<p>0.3.2 2005\/10\/28<\/p>\n<p>bug: google changed their source and broke the script again.  it&#8217;s fixed and should continue to work if they switch back to<\/p>\n<p>yesterday&#8217;s version<\/p>\n<p>0.3.1 2005\/10\/27<\/p>\n<p>bug: fixed to work with new (broken?) google source<\/p>\n<p>0.3   2005\/10\/02<\/p>\n<p>new: refactored to use XPath<\/p>\n<p>0.2.1 2005\/08\/08<\/p>\n<p>bug: fixed thumbnails when using google&#8217;s search history (http:\/\/www.google.com\/psearch)<\/p>\n<p>new: added use_amazon_thumbnails config option<\/p>\n<p>0.2   2005\/08\/03<\/p>\nnew: results that link to an amazon product page now show the product image instead of the screen shot thumbnail\n<p>bug: fixed thumbnail placement for non-html (<span class=\"caps\">PDF<\/span>, <span class=\"caps\">PPT<\/span>, etc.) results<\/p>\n<p>0.1   2005\/07\/18<\/p>\n<p>initial release<\/p>\n<ul>\n\t<li>\/<\/li>\n<\/ul>\n<p>\/\/ UserScript<\/p>\n<p>\/\/ @name          Google Thumbnails<\/p>\n<p>\/\/ @version       0.3.5<\/p>\n<p>\/\/ @namespace     http:\/\/flet.ch\/things\/greasemonkey\/<\/p>\n<p>\/\/ @description   Adds web site thumbnail images to google search results<\/p>\n<p>\/\/ @include       http:\/\/www.google.<strong>\/search<\/strong><\/p>\n<p>\/\/ \/UserScript<\/p>\n<p>(function () {<\/p>\n<p>var gthumbnails = {<\/p>\n<p>config: {<\/p>\n<p>use_amazon_thumbnails: true, \/\/ use amazon product images in place of screen shots for amazon.com results?<\/p>\n<p>debug: true,                \/\/ print debug output to the javascript console<\/p>\n<p>},<\/p>\n<p>result_link_xpath: &#8220;\/\/*[(name() = &#8216;<span class=\"caps\">DIV<\/span>&#8217; and @class=&#8216;g&#8217;) or (name() = &#8216;H3&#8217; and @class=&#8216;sem&#8217;)]\/H2\/A&#8221;,<\/p>\n<p>amazon_regex: \/^http:\\\/\\\/(?:www\\.)?amazon\\.(?:com|(?:co.)?[a-z]{2})\\\/exec\\\/obidos\\\/(?:tg\\\/detail\\\/-|<span class=\"caps\">ASIN<\/span>)\\\/(?:[a-z]<ins>\\\/)?([a-zA-Z0-9]<\/ins>)\\\/?.*$\/i,<\/p>\n<p>result_link_regex: \/^(?:([^\\\/].<strong>)|\\\/url\\?.<\/strong>q=([^&amp;]+)&amp;?.*$)\/i,<\/p>\n<p>addCSS: function( css ) {<\/p>\n<p>var head = window.document.getElementsByTagName( &#8220;head&#8221; )<sup class=\"footnote\"><a href=\"#fn0\">0<\/a><\/sup>;<\/p>\n<p>var style = window.document.createElement( &#8220;style&#8221; );<\/p>\n<p>style.setAttribute( &#8220;type&#8221;, &#8220;text\/css&#8221; );<\/p>\n<p>style.innerHTML = css;<\/p>\n<p>head.appendChild( style );<\/p>\n<p>},<\/p>\n<p>addThumbnails: function() {<\/p>\n<p>var results = document.evaluate( this.result_link_xpath, document, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null );<\/p>\n<p>this.config.debug &amp;&amp; ( t0 = new Date().getTime() );<\/p>\n<p>for( var result_link = null, i = 0; ( result_link = results.snapshotItem( i ) ); i++ ) {<\/p>\n<p>\/\/ create the thumbnail <IMG> and surrounding <A> elements<\/p>\n<p>var thumbnail = document.createElement( &#8220;span&#8221; );<\/p>\n<p>var result_url = result_link.getAttribute( &#8220;href&#8221; );<\/p>\n<p>var real_result_url = result_url.replace( this.result_link_regex, &#8220;$1$2&#8221; );<\/p>\n<p>var asin = result_url.match( this.amazon_regex ) &amp;&amp; result_url.replace( this.amazon_regex, &#8220;$1&#8221; );<\/p>\n<p>if( this.config.use_amazon_thumbnails &amp;&amp; asin ) {<\/p>\n<p>var is_amazon_link = true;<\/p>\n<p>var thumb_url = &#8220;http:\/\/images.amazon.com\/images\/P\/&#8221; + asin + &#8220;.01.<em>SS78_BO1,255,255,255_BO1,170,170,170_BO61,255,255,255_CR46,61,112,82<\/em>.jpg&#8221;;<\/p>\n<p>} else {<\/p>\n<p>var is_amazon_link = false;<\/p>\n<p>var thumb_url = &#8220;http:\/\/open.thumbshots.org\/image.pxf?url=&#8221; + real_result_url;<\/p>\n<p>}<\/p>\n<p>thumbnail.innerHTML =<\/p>\n<p>&#8216;&#8217; + result_url + &#8216;&#8220;&gt;&#8217; +<\/p>\n<p>&#8216;&#8217; + thumb_url + &#8216;&quot; align=&#8220;left&#8221;  height=&#8220;80&#8221; width=&#8220;110&#8221; class=&quot;gms_gthumbnail&#8217; + ( is_amazon_link ? &#8220;_amazon&#8221; : &quot;&quot; )  + &#8216;&quot; style=&quot;background: url(http:\/\/pthumbnails.alexa.com\/image_server.cgi?size=small&amp;url=&#8217; + real_result_url + &#8216;) no-repeat center;&quot;\/&gt;&#8217; +<\/p>\n<p>&#8216;<\/a>&#8217;;<\/p>\n<p>result_link.parentNode.insertBefore( thumbnail, result_link );<\/p>\n<p>}<\/p>\n<p>this.config.debug &amp;&amp; ( t1 = new Date().getTime() );<\/p>\n<p>this.config.debug &amp;&amp; ( GM_log( ( t1 &#8211; t0 ) \/ 1000 ) );<\/p>\n<p>}<\/p>\n<p>}<\/p>\n<p>gthumbnails.addCSS( &#8220;.g, hr, p { clear: left; }&#8221; );<\/p>\n<p>gthumbnails.addCSS( &#8220;.gms_gthumbnail { border: 1px solid #<span class=\"caps\">AAA<\/span>; }&#8221; );<\/p>\n<p>gthumbnails.addCSS( &#8220;.gms_gthumbnail, .gms_gthumbnail_amazon { margin: 0 6px 8px 0; width: 106px; height: 78px;  }&#8221; );<\/p>\n<p>gthumbnails.addCSS( &#8220;.gms_gthumbnail_amazon { border-width: 0; }&#8221; );<\/p>\n<p>gthumbnails.addThumbnails();<\/p>\n<p>})();<\/p>\n","coscripter-wiki-url":"http:\/\/coscripter.researchlabs.ibm.com\/coscripter\/browse\/script\/9393","id":9393,"koalescence-url":"http:\/\/coscripter.researchlabs.ibm.com\/coscripter\/browse\/script\/9393","coscripter-executed-url":"http:\/\/coscripter.researchlabs.ibm.com\/coscripter\/api\/executed","coscripter-url":"http:\/\/coscripter.researchlabs.ibm.com\/coscripter\/lite\/script\/9393"}